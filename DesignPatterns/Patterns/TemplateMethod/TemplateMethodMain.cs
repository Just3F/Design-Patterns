using System;
using System.Collections.Generic;

namespace DesignPatterns.Patterns.TemplateMethod
{
    class TemplateMethodMain : IExample
    {
        public void Start()
        {
            const string testText = "test text!";
            IEnumerable< TextEditor> textEditors = new List<TextEditor>{ new Excel(), new Word()};

            foreach (var textEditor in textEditors)
            {
                textEditor.GetReport(testText);
            }
        }

        abstract class TextEditor
        {
            public void GetReport(string text)
            {
                Validate(text);
                ApplyStyles();
                text = GenerateReport(text);
                DisplayReport(text);
            }

            void Validate(string text)
            {
                if (string.IsNullOrWhiteSpace(text))
                    throw new NullReferenceException();
            }

            public abstract void ApplyStyles();
            public abstract string GenerateReport(string text);

            void DisplayReport(string text)
            {
                Console.WriteLine(text);
            }
        }

        class Word : TextEditor
        {
            public override void ApplyStyles()
            {
                Console.BackgroundColor = ConsoleColor.DarkBlue;
            }

            public override string GenerateReport(string text)
            {
                return $"{text} {Environment.NewLine} Generated by Word editor.";
            }
        }

        class Excel : TextEditor
        {
            public override void ApplyStyles()
            {
                Console.BackgroundColor = ConsoleColor.DarkGreen;
            }

            public override string GenerateReport(string text)
            {
                return $"{text} {Environment.NewLine} Generated by Excel editor.";
            }
        }
    }
}
